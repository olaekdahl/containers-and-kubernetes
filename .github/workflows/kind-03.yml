name: KinD 03 - Ingress & HPA
on:
  workflow_dispatch:
jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: helm/kind-action@v1.10.0
        with:
          node_image: kindest/node:v1.30.0
      - uses: azure/setup-kubectl@v4

      - name: Metrics Server
        run: |
          set -euxo pipefail

          # Install upstream manifests
          kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

          # Ensure KinD-friendly args (self-signed kubelet certs)
          kubectl -n kube-system patch deploy/metrics-server --type='json' -p='[
            {"op":"add","path":"/spec/template/spec/containers/0/args","value":[
              "--cert-dir=/tmp",
              "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
              "--kubelet-insecure-tls"
            ]}
          ]' || true

          # 1) Remove rollingUpdate if present
          kubectl -n kube-system patch deploy/metrics-server --type='json' -p='[
            {"op":"remove","path":"/spec/strategy/rollingUpdate"}
          ]' || true

          # 2) Set strategy to Recreate
          kubectl -n kube-system patch deploy/metrics-server --type='json' -p='[
            {"op":"replace","path":"/spec/strategy/type","value":"Recreate"}
          ]' || true

          # Bounce the pod so new args/strategy take effect quickly
          kubectl -n kube-system delete pod -l k8s-app=metrics-server --wait=false || true

          # Wait for the Deployment and the aggregated API
          kubectl -n kube-system rollout status deploy/metrics-server --timeout=300s
          kubectl wait --for=condition=Available --timeout=180s apiservice/v1beta1.metrics.k8s.io

          # Sanity checks (non-fatal)
          kubectl top nodes || true
          kubectl top pods -A || true

      - name: Ingress-NGINX
        run: |
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
          kubectl -n ingress-nginx rollout status deploy/ingress-nginx-controller --timeout=240s

      - name: Apply Manifests
        run: |
          IMG="ghcr.io/${{ github.repository }}"; TAG="sha-${{ github.sha }}"
          for f in k8s-kind-demos/03-ingress-and-hpa/k8s/*.yaml; do
            sed -i "s#ghcr.io/OWNER/REPO:sha-PLACEHOLDER#${IMG}:${TAG}#g" "$f" || true
          done
          kubectl apply -f k8s-kind-demos/03-ingress-and-hpa/k8s
          kubectl rollout status deploy/hello --timeout=240s

      - name: Generate Load
        run: |
          kubectl run load --rm -i --restart=Never --image=curlimages/curl --             sh -c 'for i in $(seq 1 200); do curl -s http://hello.default.svc.cluster.local/ > /dev/null; done'
          sleep 20
          kubectl get hpa
          kubectl get deploy hello -o wide
